# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 
trigger:
  branches:
    include:
    - refs/heads/main
    - refs/heads/dev
    - refs/heads/release

variables:
  ${{ if eq( variables['Build.SourceBranchName'], 'dev*' ) }}:
    # Dev branch strategy
    deployable: false
    targetEnv: 'devEnv'
  ${{ elseif eq( variables['Build.SourceBranchName'], 'main' ) }}:
    # Main branch strategy
    deployable: true
    targetEnv: 'mainEnv'
  ${{ elseif eq( variables['Build.SourceBranchName'], 'azure-pipelines' ) }}:
    # Main branch strategy
    deployable: true
    targetEnv: 'mainEnv'
  ${{ else }}:
    # Default Values
    deployable: false
    targetEnv: null

resources:
  repositories:
  - repository: self
    # type: git
    # ref: refs/heads/main

jobs:
- job: Job_1
  displayName: Main
  pool:
    vmImage: ubuntu-20.04
  steps:
  - checkout: self
    clean: true
  - task: Docker@2
    displayName: Build, Push
    inputs:
      containerRegistry: 'dr1'
      repository: stevenheinze57/django-blogger
      buildContext: ''
      tags: >-
        $(Build.SourceBranchName)

        $(Build.SourceVersion)
  - task: Bash@3
    displayName: Deploy
    condition: and(succeeded(), eq(variables.deployable, true) )
    inputs:
      targetType: inline
      script: echo ">>>>>>>>>> ${{ variables.targetEnv }} <<<<<<<<<<"
...
